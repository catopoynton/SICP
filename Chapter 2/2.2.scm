(define (make-segment p1 p2)
    (cons p1 p2))
(define (start-segment s)
    (car s))
(define (end-segment s)
    (cdr s))
(define (mid-point s)
    (make-segment (/ (+ (x-point(start-segment s)) (x-point(end-segment s))) 2)
                (/ (+ (y-point(start-segment s)) (y-point(end-segment s))) 2)))

(define (s-length s)
    (let    
        (dx (- (x-point(start-segment s)) (x-point(end-segment s)))
        (dy (- (+ (y-point(start-segment s)) (y-point(end-segment s)))) 2))
        (sqrt (+ (expt dx 2) (expt dy 2)))))
    
(define (make-point x y)
    (cons x y))
(define (x-point p)
    (car p))
(define (y-point p)
    (cdr p))

(define (print-point p) (newline)
    (display "(") 
    (display (x-point p)) 
    (display ",")
    (display (y-point p)) 
    (display ")"))

(define p1 (make-point 0 0))
(define p2 (make-point 5.0 5.0))
(define l (make-segment p1 p2))
(print-point (mid-point l))
