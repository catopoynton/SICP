;subsets
(define (add-item eles item)
    (if (null? eles)
    '()
    (cons (list (car eles) item) (add-item (cdr eles) item))))
;we are trying to generate all subsets which means combining all af the elements in the list 
;in all possible ways. Say you have a the powerset of a set, but are now adding a new item z to the set
;the new powerset can be generated by adding the z to each of the subsets, and retaining all the existing subsets. 

(define (sublists eles)
    (if (null? (cdr eles))
    (list (list (car eles)))
    (append (append (sublists (cdr eles)) (add-item (sublists (cdr eles)) (car eles))) (list (car eles)))))

(display (sublists (list 1 2)))
(newline)

(define (subsets s) 
(if (null? s)
    (list '())
    (let ((rest (subsets (cdr s))))
    (append rest (map (lambda (x) (cons (car s) x)))))))
                       

(display (subsets (list 1 2 3))) 




